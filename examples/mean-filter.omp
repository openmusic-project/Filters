; OM File Header - Saved 2009/11/04 13:29:35
; (6.010006 :patc (om-make-point 84 121) (om-make-point 50 50) (om-make-point 932 834) "" 183 0 nil "2009/11/04 13:23:24")
; End File Header
(in-package :om)(load-lib-for (quote ("OM-fil")))(setf *om-current-persistent* (om-load-patch1 "mean-filter" (quote ((om-load-boxcall (quote bastype) "aux3" (quote t) (quote nil) (om-make-point 401 426) (om-make-point 21 30) 6 "6" nil) (om-load-boxcall (quote genfun) "MEAN-FILTER" (quote filtres::mean-filter) (quote ((om-load-inputfun (quote input-funbox) "list of data" "DATA" (list 1 2 3 4 5 6)) (om-load-inputfun (quote input-funbox) "window size in samples data" "WINDOW" 100))) (om-make-point 348 473) nil nil nil "mean-filter" 1) (om-load-boxcall (quote bastype) "aux4" (quote t) (quote nil) (om-make-point 517 522) (om-make-point 21 30) 8 "8" nil) (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "no documentation" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "no documentation" "DECIMALS" 0))) (om-make-point 41 552) (om-make-point 601 139) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0 80.0 89.99999 100.0 110.00001 120.0 130.0 140.0 150.0 160.0 170.0 179.99999 190.0 200.0 210.0 220.00002 230.0 240.0 250.0 260.0 270.0 280.0 290.0 300.0 310.0 320.0 330.0 340.0 350.0 359.99997 370.0 380.0 389.99997 400.0 410.00003 420.0 430.0 440.00003 450.0 460.0 469.99997 480.0 490.00003 500.0 510.0 520.0 530.0 540.0 550.0 560.0 570.0 580.0 590.0 600.0 610.0 620.0 630.0 640.0 650.0 660.0 670.0 680.0 690.00007 700.0 710.0 719.99994 730.0 740.0 749.99994 760.0 770.0 779.99994 790.0 800.0 810.0 820.00007 830.0 840.0 850.00007 860.0 870.0 880.00007 890.0 900.0 909.99994 920.0 930.0 939.99994 950.0 960.0 970.0 980.00007 990.0)) (quote (-20.0 24.0 0.8 -13.428572 1.7777778 1.2727273 5.538461 8.769231 2.4615386 -1.6923077 -5.076923 0.3846154 11.307693 18.076924 13.307693 17.384615 29.307692 25.692309 12.692307 14.846154 9.153846 16.846154 8.0 19.153847 16.076924 9.384615 -0.30769232 -4.4615383 -8.692307 -14.615386 -21.692309 -22.153845 -17.153847 -14.461538 -13.461538 -6.1538463 -13.846154 -14.769232 -17.615386 -13.230768 -12.230768 -13.692307 -16.461539 -4.4615383 5.1538463 1.1538462 -2.692308 -6.692307 -3.2307694 -7.1538463 -13.230768 -0.53846157 5.076923 11.153846 11.923078 16.461539 12.769232 17.307692 15.461538 16.307692 12.615386 13.923078 26.076924 25.846156 18.307692 4.8461537 -3.7692306 -6.8461537 -8.692307 -18.923077 -25.307692 -19.923077 -19.76923 -7.0 -15.230768 -16.23077 -12.076922 -4.769231 3.0 9.0 10.230769 16.461539 27.307692 31.846156 27.615386 37.384617 27.846156 31.0 31.307692 34.53846 23.538464 17.76923 14.846154 11.615386 -43.33333 -35.6 -14.428572 -6.333334 1.6363636 -37.0)) (quote bpf) 8))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) nil nil (pairlis (quote (deltapict outport inport zoom palette-mode obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems picture)) (list (om-make-point 0 0) 0 0 1 0 0 (list 1 15 2 2 1) nil 1000 0 18350450 2621450 (quote t) nil)) t nil nil nil) (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "no documentation" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "no documentation" "DECIMALS" 0))) (om-make-point 14 264) (om-make-point 601 139) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 620 630 640 650 660 670 680 690 700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990)) (quote (-20 -2 94 -38 -30 -88 -10 70 40 -66 64 79 -21 22 -84 40 -82 41 54 78 8 93 89 17 -90 7 -52 16 -75 63 1 -33 -48 -46 38 12 -75 -96 72 -17 29 20 -37 -11 -70 9 -33 19 -24 81 29 20 -67 -23 65 -88 -90 95 82 46 29 35 33 88 -4 -56 -71 82 70 -93 -3 -93 -66 -11 11 -100 5 66 -54 95 -25 57 -39 92 8 12 5 92 41 64 11 73 -29 16 61 3 -51 -67 -26 -37)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) "x" nil (pairlis (quote (deltapict outport inport zoom palette-mode obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems picture)) (list (om-make-point 0 0) 0 0 1 0 0 (list 1 15 2 2 1) nil 1000 0 18350450 2621450 (quote t) nil)) t nil nil nil) (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 376 130) (om-make-point 35 30) 100 "100" nil) (om-load-boxcall (quote genfun) "REPEAT-N" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "patch" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "NUM" 0))) (om-make-point 215 184) (om-make-point 213 53) nil nil nil 1) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 292 72) (om-make-point 35 30) 100 "100" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 185 69) (om-make-point 40 30) -100 "-100" nil) (om-load-boxcall (quote genfun) "OM-RANDOM" (quote om-random) (quote ((om-load-inputfun (quote input-funbox) "min" "LOW" 0) (om-load-inputfun (quote input-funbox) "max" "HIGH" 0))) (om-make-point 188 105) (om-make-point 125 53) nil nil nil 1))) (quote ((4 2 1 0 nil 0) (0 0 1 1 nil 0) (1 0 3 2 nil 0) (2 0 3 3 nil 0) (6 0 4 2 nil 0) (9 0 6 0 nil 0) (5 0 6 1 nil 0) (8 0 9 0 nil 0) (7 0 9 1 nil 0))) nil 6.010006))
